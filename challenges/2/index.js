/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence that do not exceed the nth term,
 * find the sum of the even-valued terms.
 */

/**
 * Brute force solution.
 * @param {*} n
 */
const _fiboEvenSum = n => {
  let a = 1;
  let b = 2;
  let sum = 0;
  while (n > 0) {
    if (a % 2 === 0) {
      sum += a;
    }
    // Assign the value of `b` in `a` and value of `a + b` in `b`;
    [a, b] = [b, a + b];
    n -= 1;
  }
  return sum;
};

/**
 *
 * @param {*} n
 */
const fiboEvenSum = n => {
  // Series 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ..
  // Even Series 2, 8, 34, 144, ...
  // N for even series.
  let nForEven = Math.ceil((n - 1) / 3);

  let a = 2;
  let b = 8;
  let sum = 0;
  while (nForEven > 0) {
    sum += a;
    // EFn = 4 * EF(n-1) + EF(n-2)
    [a, b] = [b, 4 * b + a];
    nForEven -= 1;
  }

  return sum;
};

module.exports = fiboEvenSum;
